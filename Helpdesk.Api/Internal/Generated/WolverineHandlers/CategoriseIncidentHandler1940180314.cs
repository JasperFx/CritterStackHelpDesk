// <auto-generated/>
#pragma warning disable
using FluentValidation;
using Wolverine.FluentValidation;
using Wolverine.Marten.Publishing;

namespace Internal.Generated.WolverineHandlers
{
    // START: CategoriseIncidentHandler1940180314
    public class CategoriseIncidentHandler1940180314 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Wolverine.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;
        private readonly FluentValidation.IValidator<Helpdesk.Api.CategoriseIncident> _validator;
        private readonly Wolverine.FluentValidation.IFailureAction<Helpdesk.Api.CategoriseIncident> _failureAction_of_CategoriseIncident2088760903;

        public CategoriseIncidentHandler1940180314(Wolverine.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory, FluentValidation.IValidator<Helpdesk.Api.CategoriseIncident> validator, [Lamar.Named("failureAction2")] Wolverine.FluentValidation.IFailureAction<Helpdesk.Api.CategoriseIncident> failureAction_of_CategoriseIncident2088760903)
        {
            _outboxedSessionFactory = outboxedSessionFactory;
            _validator = validator;
            _failureAction_of_CategoriseIncident2088760903 = failureAction_of_CategoriseIncident2088760903;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            // The actual message body
            var categoriseIncident = (Helpdesk.Api.CategoriseIncident)context.Envelope.Message;

            await Wolverine.FluentValidation.Internals.FluentValidationExecutor.ExecuteOne<Helpdesk.Api.CategoriseIncident>(_validator, _failureAction_of_CategoriseIncident2088760903, categoriseIncident).ConfigureAwait(false);
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            var eventStore = documentSession.Events;
            
            // Loading Marten aggregate
            var eventStream = await eventStore.FetchForWriting<Helpdesk.Api.IncidentDetails>(categoriseIncident.Id, categoriseIncident.Version, cancellation).ConfigureAwait(false);

            
            // The actual message execution
            var outgoing1 = Helpdesk.Api.CategoriseIncidentHandler.Handle(categoriseIncident, eventStream.Aggregate);

            if (outgoing1 != null)
            {
                
                // Capturing any possible events returned from the command handlers
                eventStream.AppendMany(outgoing1);

            }

            await documentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);
        }

    }

    // END: CategoriseIncidentHandler1940180314
    
    
}

